server:
  port: 0

  profiles:
    active: default

spring:
  application:
    name: project-service

  datasource:
    url: jdbc:mysql://mysql:3306/project_schema?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  sql:
    init:
      mode: always

  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 50
          default_batch_fetch_size: 100
        order_inserts: true
        order_updates: true
  kafka:
    bootstrap-servers: localhost:9092
    properties:
      acks: all
      enable.idempotence: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # JsonSerializer가 타입 정보를 헤더에 넣지 않게(호환성↑)
      properties:
        spring.json.add.type.headers: false
      retries: 10
      linger-ms: 20       # 소량 배치
      batch-size: 32768

  thymeleaf:
    enabled: false

  cloud:
    discovery:
      enabled: true
    loadbalancer:
      ribbon:
        enabled: false

  elasticsearch:
    uris: http://localhost:9200
    connection-timeout: 5s
    socket-timeout: 30s
  data:
    elasticsearch:
      repositories:
        enabled: true

springdoc:
  api-docs:
    version: openapi_3_0
    enabled: true
    path: /v3/api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    enabled: true
    path: /swagger-ui.html


jwt:
  secret: asdf
  expiration: 86400000

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_DEFAULTZONE}

resilience4j:
  circuitbreaker:
    instances:
      myFeignClient:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s

  timelimiter:
    instances:
      myFeignClient:
        timeoutDuration: 3s
logging:
  level:
    org.elasticsearch.client: TRACE